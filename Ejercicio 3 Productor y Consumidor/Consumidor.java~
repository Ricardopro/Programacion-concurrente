import com.rabbitmq.client.*;

import java.io.IOException;
import java.util.Random;
public class Consumidor {

	private static final String TASK_QUEUE_NAME = "task_queue";

	public static void main(String[] argv) throws Exception {
		final String ID = argv[0];
		
		ConnectionFactory factory = new ConnectionFactory();
		factory.setHost("localhost");
		final Connection connection = factory.newConnection();
		final Channel channel = connection.createChannel();

		channel.queueDeclare(TASK_QUEUE_NAME, true, false, false, null);
		System.out.println(" [*] Consumiendo... To exit press CTRL+C");

		channel.basicQos(1);
		final Consumer consumer = new DefaultConsumer(channel) {
			int consumido=0;
			@Override
			public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {
				String message = new String(body, "UTF-8");
				
				System.out.println(" [x] Received '" + "Consumidor: " + ID + " --> " + message + "'");
				try {
					doWork(message);
					consumido++;
				} finally {
					System.out.println(" [x] Cantidad Consumida: "+consumido);
				  	channel.basicAck(envelope.getDeliveryTag(), false);
				}
		      }
		};
		channel.basicConsume(TASK_QUEUE_NAME, false, consumer);
	}

	private static void doWork(String task) {
		for (char ch : task.toCharArray()) {
			if (ch == '.') {
				try {
		  			Thread.sleep(Random.nextInt(3000));
				} catch (InterruptedException _ignored) {
		  			Thread.currentThread().interrupt();
				}
	      		}
	    	}
	}
}

